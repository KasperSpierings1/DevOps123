name: BlogAPI
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'BlogApp.sln'
      - 'Directory.Build.props'
      - '**/blogapi-workflow.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'BlogApp.sln'
      - 'Directory.Build.props'
      - '**/blogapi-workflow.yml'
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
    
      - name: Start dependencies (docker-compose)
        run: |
                    docker-compose up -d  

      - name: Wait for SQL Server container
        uses: jakejarvis/wait-action@master
        with:
          time: '5s'

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
    
      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore
    
      - name: Test
        run: dotnet test -c Release --no-build

##test2


name: .NET

on:
  schedule:
  - cron: "0 2 * * 1-5"
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
##test3

name: Build and deploy ASP.Net Core app to Azure Web App - DevOpsCasus

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'DevOpsCasus'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C9D9EB56408E4E4E9874C368A9F2C241 }}
          package: .

